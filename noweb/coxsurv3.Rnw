\subsubsection{Multi-state models}
Survival curves after a multi-state Cox model are more challenging,
particularly the variance.
The computation below has 3 steps
\begin{enumerate}
  \item Create the hazard matrices H.  For sanity, there will be one
matrix for each event time, and at each of these there is an nstate by
nstate matrix. The hazard matrices are for a risk score of 0.
The matrices are a long string: death times for the first stratum, for
the second, etc.  (There may be only one stratum).
  \item For each output curve desired, walk through and create it.
  \item Deal with robust variance
\end{enumerate}  

Keep in mind that ``stratum'' here means strata statements in the
underlying Cox model, e.g., by male and female.  
The artificial strata partitions that were used to model multiple transitions
play a different role: in step 2 above a given subject might have different
risk scores for different transitions.  Each off diagonal element of H might
have a different multiplier to create the desired curve.  If there are
time-dependent covariates that multiplier will change over time. 

A nuisance for both steps 1 and 2 is that different transitions will have 
different event times, while covariate changes are different as well.  
So a first step will be to create transition functions.   

Computations are separate for each strata, and each strata will 
have a different number of time points in the result.
Thus we can't preallocate a matrix.  Instead we generate an empty list,  %'
one per strata, and then populate it with the survival curves.
At the end we unlist the individual components one by one.
This is memory efficient, the number
of curves is usually small enough that the "for" loop is no great
cost, and it's easier to see what's going on than C code.               

<<survfitcoxph.fit2>>=
survfitcoxph.fit2 <- function (y, x, wt, x2, risk, newrisk, strata, cmap,
                               se.fit, stype, ctype, varmat, states) {

    if (is.factor(strata)) ustrata <- levels(strata)
    else                   ustrata <- sort(unique(strata))
    nstrata <- length(ustrata)
    survlist <- vector('list', nstrata)
    names(survlist) <- ustrata

    for (i in 1:nstrata) {
        indx <- which(strata== ustrata[i])
        survlist[[i]] <- agsurv2(y[indx,,drop=F], x[indx,,drop=F], 
                                 wt[indx], risk[indx],
                                 stype, ctype, cmap, states)
        }               
 @


Here is the actual work.
If $d$ is the number of unique event times and $s$ the number of
states, the cumulative hazard will be an array of dimension $(s,s,d+1)$
and the probability in state a matrix with $d+1$ rows and $s$ columns.
The first row of the hazard is 0 and the first of the survival is
the initial state.

<<survfitcoxph-agsurv2>>=
agsurv2 <- function(y, x, wt, risk, stype, ctype, cmap, states) {
    nstate <- length(object$states)
    from <- as.integer(sub(":.*$", "", colnames(cmap)))
    to   <- as.integer(sub("^.*:", "", colnames(cmap)))
    
    isort <- order(y[,2], y[,3])
    
   status <- y[,3]
    nd <- sum(status > 0)  #
 
@ 
