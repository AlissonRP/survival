\documentclass{article}[11pt]
\usepackage{Sweave}
\usepackage{amsmath}
\addtolength{\textwidth}{1in}
\addtolength{\oddsidemargin}{-.5in}
\setlength{\evensidemargin}{\oddsidemargin}
%\VignetteIndexEntry{Multi-state models and competing risks}

\SweaveOpts{keep.source=TRUE, fig=FALSE}
% Ross Ihaka suggestions
\DefineVerbatimEnvironment{Sinput}{Verbatim} {xleftmargin=2em}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=2em}
\DefineVerbatimEnvironment{Scode}{Verbatim}{xleftmargin=2em}
\fvset{listparameters={\setlength{\topsep}{0pt}}}
\renewenvironment{Schunk}{\vspace{\topsep}}{\vspace{\topsep}}

% I had been putting figures in the figures/ directory, but the standard
%  R build script does not copy it and then R CMD check fails
\SweaveOpts{prefix.string=compete,width=6,height=4}
\newcommand{\myfig}[1]{\includegraphics[height=!, width=\textwidth]
                        {compete-#1.pdf}}
\setkeys{Gin}{width=\textwidth}
<<echo=FALSE>>=
options(continue="  ", width=60)
options(SweaveHooks=list(fig=function() par(mar=c(4.1, 4.1, .3, 1.1))))
pdf.options(pointsize=10) #text in graph about the same as regular text
options(contrasts=c("contr.treatment", "contr.poly")) #ensure default

require("survival")
@ 

\title{Multi-state models and competing risks}
\author{Terry M Therneau \\ \emph{Mayo Clinic}}
\newcommand{\code}[1]{\texttt{#1}}

<<check, echo=FALSE, results=tex>>=
cmplib <- require("cmprsk", quietly=TRUE)
if (cmplib) cat("\\newcommand{\\CMPRSK}{}%\n")
@ 

\begin{document}
\maketitle

\section{Multi-state models}
\begin{figure}

<<sfig1, fig=TRUE, echo=FALSE>>=
# A note to readers of this code: drawing multi-state figures in this
#  way via polygon and arrows statements is a major PITA.  Don't mimic
#  the code below, instead do yourself a favor and use a package
#  designed for the task such as diagram, DiagrammeR, or Gmisc.
# As a recommended package that is included by lots of others I try to
#  limit dependencies in the survival vignettes.
#
par(mar=c(.1, .1, .1, .1))
frame()
oldpar <- par(usr=c(0,100,0,100))
# first figure
xx <- c(0, 10, 10, 0)
yy <- c(0, 0, 10, 10)
polygon(xx +10, yy+70)
polygon(xx +30, yy+70)
arrows( 22, 75, 28, 75, length=.1)
text(c(15, 35), c(75,75), c("Alive", "Dead"))

# second figure
polygon(xx +60, yy+70)  
for (j in c(55, 70, 85)) {
    polygon(xx +80, yy+j)
    arrows(72, (5*75 +j+5)/6, 78, (100+j*5)/6, length=.1)
}
text(c(65, 85,85,85), c(70,55,70,85)+5, c("A", "D3", "D2", "D1")) 

# third figure
polygon(xx+10, yy+25)
for (j in c(15,35)) {
    polygon(xx +30, yy+j)
    arrows(22, (5*30 +j+4)/6, 28, (54+j*5)/6, length=.1)
}
arrows(28, 2+(65 + 35*5)/6, 22, 2+ (160 + 40)/6, length=.1)
arrows(35, 33, 35, 27, length=.1)
text(c(15, 35,35), c(30, 20, 40), c("Health", "Death", "Illness"))

# fourth
for (i in c(50, 68)) polygon(xx+i, yy+25)
arrows(62, 30, 67, 30, length=.1)
arrows(80, 30, 84, 30, length=.1)
text(90, 30, "...", cex=2)
text(c(55, 73), c(30, 30), c("0", "1"))
par(oldpar)
@
  \caption{Four multi-state models.  In the upper left is simple survival,
 in the upper right an example of competing risks, 
 in the lower left a multi-state
 illness-death model, and the lower right one of sequential events.}
 \label{mfig1}
\end{figure}

For all multi-state models the first task is to draw a graph of
states and transitions,
figure \ref{mfig1} contains some simple examples.
Each box is a patient state and each arrow a possible transition.
The top left figure is simple survival: all patients start in the
alive state and can make a single transition to death.
The top right depicts classic competing risks:
all subjects start on the left, and each can make a single transition
to one of 3 terminal states.
The bottom figure shows a simple multi-state situation known as
the illness-death model with recovery.
The lower right represents sequential events such as repeated
infections in the CGD study, in that case one subject had 8
events so there are 9 states corresponding to entry into the study 
(0 infections) and first, second, \ldots event.

As will be shown below there are often multiple choices for the
state and transition diagram, and for some data sets it is revealing to
look at a problem from multiple views.
The two other primary decisions are the choice of time scale for
the fits, e.g. time from entry to the study vs. time from entry to
the state, and what covariates will be used .

\section{Multi-state curves}
\subsection{Aalen-Johansen estimate}
A starting point for analysis is to compute and plot 
estimates of $p(t)$, which is a vector containing the probalilty of being
in each of the states at time $t$.
If there were no censoring then $p$ becomes a simple a tabulation at time
$t$ of all the states.
For the general case we compute this
this using the Aalen-Johansen estimate via the 
\code{survfit} function.

Mathematically the estimate is simple.
For each unique time that an event occurs form the
transition matrix $T(t)$ with elements or rates of 
 $\lambda_{ij}(t) =$ the fraction of subjects who transition from
state $i$ to $j$ at time $t$, among those in state $i$ just prior to 
time $t$.
($T$ is equal to the identity matrix at any time point without an
observed transition.) 
Then
\begin{equation}
  p(t) = p(0) \prod_{s \le t} T(s)  \label{AJ}
\end{equation}
where $p(0)$ is the initial distribution of subjects.

Let's work this out for the simple two-state alive$\longrightarrow${dead} model.
Let $n(t)$ be the number of subjects still at risk at time $t$ and
$d(t)$ the number of deaths at that time point.
All subjects start in the alive state and thus $p(0) = (1,0)$ and
the transition matrix is 
\begin{equation*}
  T(s) = \left( \begin{array}{cc} 
    [n(s)- d(t)]/n(s)  & n(s)/d(s) \\\\ 0 & 1 \end{array}
  \right)
\end{equation*}
The second row corresponds to the fact that death is an absorbing state.

Writing out the matrices for the first few transitions and multiplying
them leads to
\begin{equation}
  p_1(t) = \prod_{s \le t} \left[n(s) - d(s)\right] /n(s) \label{km}
\end{equation}
which we recognize as the Kaplan-Meier estimate of survival.
For the two state alive-dead model the Aalen-Johansen (AJ) estimate
has reprised the KM.
Repeating the same matrix exercise for the competing risks case shown in the
upper right of figure \ref{mfig1} 
recovers the well known cumulative incidence (CI) estimate;
it is also a special case of the AJ estimate.
The AJ estimate is very flexible: subjects can visit multiple states
during the course of a study, subjects can start after time 0 (delayed
entry), and they can start in any of the states. 
The \code{survfit} function implements the AJ estimate and 
will handle all these cases.

The standard error of the estimates is computed using an
infinitesimal jackknife.
Let $D(t)$ be a matrix with one row per subject and one column per state.
Each row contains the \emph{change} in $p(t)$ corresponding to subject $i$,
i.e., the derivative of $p$ with respect to the $i$th subject's case
weight $dp(t)/dw_i$. Then $V(t) = D'D$ is the estimated variance-covariance
matrix of the estimates at time $t$.

The $p(t)$ vector obeys the obvious constraint that the sum of states at 
any time
is equal to 1: each person has to be somewhere.
I prefer the label \emph{current prevalence} estimate, 
since it estimates what fraction of the subjects are in any
given state across time.  
However the word ``prevalence'' is likely to generate confusion whenever
death is one of the states, due to its historic use as the fraction of
living subjects who have a particular condition.
We will use the phrase \emph{probability in state} or simply $p$
from this point forward.

In the simple two state model the Pr(alive) is the 
usual KM survival estimate, and we have 
$p_1(t) = 1- p2(t)$, Pr(alive) = 1 - Pr(dead).  
Plots for the 2 state case sometimes choose to show p(alive)
and sometimes p(dead). Which one is used often depends on a historical
whim of the disease specialty; 
cardiology journals for instance quite often use Pr(event) resulting in curves
that rise starting from zero, 
while oncology journals invariably use Pr(alive) giving curves that fall 
downhill from 1.
The survfit routine's historical default for the 2 state case is to 
print and plot Pr(alive)= $p_1(t)$, which reflects that the
author of the routine was working primarily in cancer trials at the time 
said default was chosen.

For simple survival we have gotten used to the idea of using Pr(dead) and
Pr(alive) interchangeably, but that habit needs to be left behind for
multi-state models, for them curves of $1-p_k(t)$ 
= probability(any other state than $k$) are not useful.
In the multi-state case individual curves can go both up and down.
For competing risks the curve for the initial state (leftmost in 
in the diagram) is rarely included in the final plot; since the curves sum to
1 the full set is redundant, Pr(nothing yet) is usually the least interesting
of the set, and so is left off to make the plot less busy.
The remaining curves in the competing risks case rise from 0.
(This bothers some researchers as it 'just looks wrong' to them.)

\subsection{Examples}
Start with a simple competing risks problem.
The \code{mgus2} data set contains the time to plasma cell malignancy (PCM)
and/or death
for 1384 subjects diagnosed with monoclonal gammopathy of undetermined
significance (MGUS).  Survival and progression time are in months. 
The code below creates an ordinary Kaplan-Meier curve of
post-diagonsis survival for these subjects, along with a histogram of
age at diagnosis.
The mean age at diagnosis is just over 70 years.

<<mgus1, fig=TRUE>>=
oldpar <- par(mfrow=c(1,2))
hist(mgus2$age, nclass=30, main='', xlab="Age")
with(mgus2, tapply(age, sex, mean))

mfit1 <- survfit(Surv(futime, death) ~ sex, data=mgus2)
mfit1
plot(mfit1, col=c(1,2), xscale=12, mark.time=FALSE, lwd=2,
     xlab="Years post diagnosis", ylab="Survival")
legend(200, .8, c("female", "male"), col=1:2, lwd=2, bty='n')
par(oldpar)
@ 

The xscale and yscale arguments to \code{plot.survfit} affect only the
axis labels, not the data.  Further additions to the plot region
such as \code{legend}, \code{lines}, or \code{text} remain in the 
original scale.  This simplifies programmatic additions such as adding
another curve to the plot, while making eyeball additions such as a 
legend less clear.

As a second model for these subjects we will use competing risks
with plasma cell malignancy (PCM) and death without malignancy
as the two terminal states, as shown in the upper left of figure \ref{mfig2}.
For this model we are only interested in the first event for each
subject.
Formally we are treating progression to a plasma cell malignancy (PCM)
as an \emph{absorbing state}, i.e., one 
that subjects never exit.  
We create a variable \code{etime} containing the time to 
the first of progression, death, or last follow-up along with an event
variable that contains the outcome.
The starting data set \code{mgus2} has two pairs of variables
\code{(ptime, pstat)} that contain the time to progression
and \code{(futime, status)} that contain the time to death or last known
alive.
The code below creates the necessary \code{etime} and \code{event}
variables, then computes and plots the competing risks estimate.

<<mgus2, echo=TRUE, fig=TRUE>>=
etime <- with(mgus2, ifelse(pstat==0, futime, ptime))
event <- with(mgus2, ifelse(pstat==0, 2*death, 1))
event <- factor(event, 0:2, labels=c("censor", "pcm", "death"))
table(event)

mfit2 <- survfit(Surv(etime, event) ~ sex, data=mgus2)
mfit2
plot(mfit2, col=c(1,2,1,2), lty=c(2,2,1,1),
     mark.time=FALSE, lwd=2,  xscale=12,
     xlab="Years post diagnosis", ylab="Prevalence")
legend(240, .6, c("death:female", "death:male", "pcm:female", "pcm:male"), 
       col=c(1,2,1,2), lty=c(1,1,2,2), lwd=2, bty='n')
@ 

The \code{mfit2} call is nearly identical to that for an ordinary Kaplan-Meier, 
with the exception of the \code{event} variable.
\begin{enumerate}
  \item The event variable was created as a \emph{factor}; 
    whereas for ordinary single
    state survival the status is either 0/1 or TRUE/FALSE.  
    The first level of the factor must be censoring, which is the status code
    for those whose follow-up terminated without reaching a new endpoint.
    Codes for the remaining states can be in any order. The labels for the
    states are unrestricted, e.g., the first one does not have to be ``censor''.
    (It will however be treated as censoring, whatever the name.)
  \item A simple print of the \code{mfit2} object shows the order in
    which the curves will be displayed.  This information was used to 
    choose the line types and colors for the curves.
  \item The default plot does not include the curve for the initial state,
    the remaining curves all start at 0.
\end{enumerate}
The reason for point 3 above is simply that multiple event curves can 
very quickly get too busy with all the multiple lines.
Since the three MGUS states of entry/pcm/death must sum to 1, one of the
three curves is redundant and the ``fraction still in the entry state''
curve is normally the least interesting.  
If the \code{survfit} call contains an \code{istate} directive, i.e., 
subjects do not necessarily all start in the same state, then the program
assumes that all states might be interesting and does not omit
any states from the estimates or plot.

A common mistake with competing risks is to use the Kaplan-Meier
separately on each
event type while treating other event types as censored.
The next plot is an example of this for the PCM endpoint.
<<mgus3, fig=TRUE>>=
pcmbad <- survfit(Surv(etime, pstat) ~ sex, data=mgus2)
plot(pcmbad[2], mark.time=FALSE, lwd=2, fun="event", conf.int=FALSE, xscale=12,
     xlab="Years post diagnosis", ylab="Fraction with PCM")
lines(mfit2[2,1], lty=2, lwd=2, mark.time=FALSE, conf.int=FALSE)
legend(0, .25, c("Males, PCM, incorrect curve", "Males, PCM, competing risk"),
       col=1, lwd=2, lty=c(1,2), bty='n')
@ 

There are two problems with the \code{pcmbad} fit.  
The first is that it attempts to estimate the expected rate of plasma cell 
malignancy if all other causes of death were to be disallowed.
In this hypothetical world it is indeed true that many more subjects would
progress to PCM (the incorrect curve is higher), but it is also 
not a world that any of us will ever inhabit.
This author views it in much the same light as supposed medieval arguments about
how many angels can dance on the head of a pin.
The second problem is that the computation for this
hypothetical case is only correct if all of the competing endpoints
are independent, a situation which is almost never true.
We thus have an unreliable estimate of an uninteresting quantity.
The competing risks curve on the other hand
estimates the fraction of MGUS subjects who \emph{will} 
experience PCM, a quantity sometimes known as the lifetime risk,
and one which is actually observable.

The last example chose to plot only a subset of the curves, something that is
often desirable in competing risks problems to avoid a
``tangle of yarn'' plot that simply has too many elements.
This is done by subscripting the survfit object.
For subscripting, multi-state curves behave as a matrix
with the outcomes as the second subscript. 
The columns are in order of the levels of \code{event},
i.e., as displayed by our earlier call to \code{table(event)}.   
The first subscript indexes the groups formed by the right hand side of
the model formula, and will be in the same order as simple survival curves.
Thus \code{mfit2[2,1]} corresponds to males and the PCM endpoint.

\begin{figure}
<<crfig2, echo=FALSE, fig=TRUE>>=
par(mar=c(.1, .1, .1, .1))
frame()
oldpar <- par(usr=c(0,100,0,100))
# first figure
xx <- c(0, 10, 10, 0)
yy <- c(0, 0, 10, 10)
polygon(xx +10, yy+70) 
temp <- c(60, 80) 
for (j in 1:2) {
    polygon(xx + 30, yy+ temp[j])
    arrows(22, 70 + 3*j, 28, temp[j] +5, length=.1)
}
text(c(15, 35, 35), c(75, 65, 85),c("Entry", "Death", "PCM")) 
text(25, 55, "Competing Risk")

# Second figure
polygon(xx +60, yy+70)  
for (j in 1:2) {
    polygon(xx + 80, yy+ temp[j])
    arrows(72, 70+ 3*j, 78, temp[j] +5, length=.1)
}
text(50+ c(15, 35, 35), c(75, 65, 85),c("Entry", "Death", "PCM")) 
arrows(85, 78, 85, 72, length=.1)
text(75, 55, "Multi-state 1")

# third figure
polygon(xx+10, yy+25)
temp <- c(15, 35) 
for (j in 1:2) {
    polygon(2*xx +30, yy + temp[j])
    arrows(22, 25 + 3*j, 28, temp[j] +5, length=.1)
}
text(c(15, 40, 40), c(30, 20, 40),c("Entry", "Death w/o PCM", "PCM")) 
polygon(2*xx + 60, yy+temp[2])
arrows(52, 40, 58, 40, length=.1)
text(70, 40, "Death after PCM")
text(40, 10, "Multi-state 2")
@ 
\caption{Three models for the MGUS data.}
\label{mfig2}
\end{figure}

A third example using the MGUS data treats it as a multi-state model
and it shown in the upper right of figure \ref{mfig2}.
In this version a subject can have multiple transitions and thus multiple
rows in the data set, and it is necessary to identify which data rows go
with which subject via the \code{id} argument of \code{survfit},
valid estimates of the curves and their standard errors both depend on this.
Our model looks like the illness-death model of figure \ref{mfig1} but
with ``plasma cell malignancy'' as the upper state and no arrow for
a return from that state to health.  
The necessary data set will have two rows for any subject who has further
follow-up after a PCM and one row for all others.
The data set is created below using the \code{tmerge} function, which is
discussed in detail in another vignette.

We need to decide what to do with the 9 subjects who have PCM
and death declared at the same month. 
(It turns out that many of these were cancer cases discovered at autopsy.)
They slipped through without comment in the earlier competing risks analysis,
only when setting up this second data set did I notice the ties.  Looking
back at the code, the prior example counted these subjects as a progression. 
In retrospect this is a defensible choice: even though
undetected before death, 
the disease must have been present for some amount of time previous and
so progression did occur first.
For the multi-state model we need to be explicit in how this is
coded since a sojourn time of 0 within a state is not allowed.
Below we push the progression time back by .1 month when there is a tie, but
that amount is entirely arbitrary.

<<mgus4, echo=TRUE>>=
ptemp <- with(mgus2, ifelse(ptime==futime & pstat==1, ptime-.1, ptime))
newdata <- tmerge(mgus2, mgus2,  id=id, death=event(futime, death),
                  pcm = event(ptemp, pstat))
newdata <- tmerge(newdata, newdata, id, enum=cumtdc(tstart))
with(newdata, table(death, pcm))
@ 
The table above shows that there are no observations in \code{newdata}
that have both a PCM and death, i.e., the ties have been resolved.
The last tmerge line above creates a variable \code{enum} which
simply counts rows for each person; it will be used later.

<<mgus4g, fig=TRUE>>=
temp <- with(newdata, ifelse(death==1, 2, pcm))
newdata$event <- factor(temp, 0:2, labels=c("censor", "pcm", "death"))  
mfit3 <- survfit(Surv(tstart, tstop, event) ~ sex, data=newdata, id=id)
plot(mfit3[,1], mark.time=FALSE, col=1:2, lty=1:2, lwd=2,
     xscale=12,
     xlab="Years post MGUS diagnosis", ylab="Prevalence of PCM")
legend(48, .04, c("female", "male"), lty=1:2, col=1:2, lwd=2, bty='n') 
@ 
This plot is quite different in that it shows the fraction of subjects
\emph{currently} in the PCM state. 
Looking at our multi-state diagram this is the fraction
of subjects in the upper right box.
The curve goes up whenever someone enters the box (progression) and down when
they leave (death).
Myeloma survival was quite short during the era of this study and the 
proportion currently in the PCM state rarely rises above 2 percent.

I have often found the three curve display below useful in these cases.
It combines the results from competing risk model used above
along with a second fit that treats death
after PCM as a separate state from death before progression,
the \emph{multi-state 2} model of figure \ref{mfig2}.
Only males are shown in the plot to minimize overlap.
<<mgus5, echo=TRUE, fig=TRUE>>=
# Death after PCM will correspond to data rows with
#  enum = 2 and event = death 
d2 <- with(newdata, ifelse(enum==2 & event=='death', 4, as.numeric(event)))
e2 <- factor(d2, labels=c("censor", "pcm", "death w/o pcm", 
                          "death after pcm"))
mfit4 <- survfit(Surv(tstart, tstop, e2) ~ sex, data=newdata, id=id)
plot(mfit2[2,], lty=c(1,2),
     xscale=12, mark.time=FALSE, lwd=2, 
     xlab="Years post diagnosis", ylab="Prevalence")
lines(mfit4[2,3], mark.time=FALSE, col=2, lty=1, lwd=2,
      conf.int=FALSE)

legend(200, .5, c("Death w/o PCM", "ever PCM", 
                  "Death after PCM"), col=c(1,1,2), lty=c(2,1,1), 
             lwd=2, bty='n', cex=.82)
@ 

\subsection{Further notes}
The Aalen-Johansen method used by \code{survfit} does not account for 
interval censoring, also known as panel data, 
where a subject's current state is recorded at some fixed time such as a
medical center visit but the actual times of transitions are unknown.
Such data requires further assumptions about the transition process in
order to model the outcomes and have a more complex likelihood, 
the \code{msm} package for instance deals with data of this type.
If subjects reliably come in at regular intervals then the 
difference between the two results can be small, e.g., the 
\code{msm} routine estimates time until progression \emph{occurred}
whereas \code{survfit} estimates time until progression was \emph{observed}.

\begin{itemize}
  \item When using multi-state data to create Aalen-Johansen estimates 
    individuals
    are not allowed to have gaps in the middle of their time line.
    For example in a data set with 
    (0, 30, pcm) and (50,70, death) as the two observations
    for a subject, the time from 30-70 is not accounted for.
  \item Subjects must stay in the same group over their entire observation
    time, i.e., variables on the right hand side of the equation can not be
    time dependent. 
  \item A transition to the same state is allowed, e.g. observations of
    (0,50, 1), (50, 75, 3), (75, 89, 3), (89, 93, 3) and (93, 100, 4) 
    for a subject who goes
    from entry to state 1, then to state 3, and finally to state 4.
    However, a warning message is issued for the data set in this case, since
    stuttering may instead be the result of a coding mistake.
    The same result is obtained if 
    the last three observations were collapsed to (75, 100, 4) but without
    the warning message.
\end{itemize}

\section{Models}
For simple two-state survival the Cox model leads to three relationships
\begin{align}
  \lambda(t)  &= \lambda_0(t) e^{X\beta}  \label{hazard} \\
  \Lambda(t)  &= \Lambda_0(t) e^{X\beta} \label{cumhaz}\\
  S(t)       &= \exp(-\Lambda(t))  \label{surv}
  \end{align}
where $\lambda$, $\Lambda$ and $S$ are the hazard, cumulative hazard
and survival functions, respectively.
There is a single linear predictor which governs
both the rate $\lambda$ (the arrow in figure \ref{mfig1}) and the 
prevalence value of the left hand box $S$.
For multi-state models this simplicity no longer holds: proportional
hazards does not lead to proportional prevalence curves.
The task before us is more complex.

The analysis of multi-state data has four
key steps.  In order of importance:
\begin{enumerate}
  \item  Draw a box and arrow figure describing the model.
  \item Think through the rates (arrows).
    \begin{enumerate}
      \item Which covariates should be attached to each rate? 
        Sometimes a covariate is important for one transition but not for
        another.
      \item For which transitions should one or more of the covariates be 
        constrained to have the same coefficient? 
        Sometimes there will be a biologic rationale for this.  For other 
        studies an equivalence is forced simply because we have too many 
        unknowns and need to thin the herd (often the same reason that models
        have few interaction terms).
      \item Which, if any, of the transitions should share the same baseline 
          hazard?  I've seen some discussion of this in models of
          graft vs host disease.  Most of the time though, they are 
          assumed to all be different.
       \item What is an approriate correlation structure for the random effect,
         if any?  Do some pairs of transitions have a shared effect?  
         Some pairs independent ones and others none?   
         Mixed effects Cox models tend to need larger sample size --- do 
         you have enough?
    \end{enumerate}
  \item Build an appropriate data set.
  \item Fit the data.  Examine multiple summaries of the
    model fit, including prevalence curves.
    \end{enumerate}
Step 1 is key to the entire process.
We saw in figure 2 and the examples above that multiple views of a
process can be useful, and this will hold for modeling as well.
Step 3 will often
be the one that demands the most attention to detail.

\subsection{Rate models}
Start with the simplest model for the MGUS data: 
a competing risks model (upper left of figure 2), distinct baseline
hazards for the two rates, no shared coefficients, and three covariates.
<<cfit1>>=
options(show.signif.stars = FALSE)  # display intelligence
mtemp <- mgus2
mtemp$age <- mtemp$age/10  # age in decades
cfit2 <- coxph(Surv(etime, event=="death") ~ age + sex + mspike, mtemp)
@ 
The effect of age and sex on non-PCM mortality is profound, which is not
a surprise given the median starting age of \Sexpr{median(mgus2$age)}.   %$
Risk rises \Sexpr{round(exp(coef(cfit2)[1]),1)} fold per decade of age and
the death rate for males is \Sexpr{round(exp(coef(cfit2)[2]),1)} times as great
as that for females.  
The size of the serum monoclonal spike has almost no impact on non-PCM 
mortality.

<<cfit2>>=
cfit1 <- coxph(Surv(etime, event=="pcm") ~ age + sex + mspike, mtemp)
cfit1
quantile(mgus2$mspike, na.rm=TRUE)
@ 
The mspike size has a major impact on progression, however; each 1 gram
change increases risk by \Sexpr{round(exp(coef(cfit1)[3]) ,1)} fold.
The interquartile range of \code{mspike} is 0.9 gram so this risk increase
is clinically important.
The effect of age on the progression rate is much less pronounced,
with a coefficient only 1/4 that for mortality, while the effect of sex
on progression is completely negligible.

Notice that each coxph fit essentially ignores the other event type(s).
In the figure, each rate (arrow) depends only on the box from which
it originates and the events which it enumerates.
Rates are instantaneous quantities, and depend only on the set of subjects
who are at risk at at a given  moment;
if someone is not at risk it really does not matter why.

When computing the prevalence of each state, on the other hand, all the
rates must be considered at once.  
The Aalen-Johansen estimate applies as before, but now the individual
entries $\lamda_{ij}(t)$ in each cell of the transition matrix are taken
from the relevant fit.
As is also the case with predicted survival curves from a simple 
Cox model, predicted prevalence curves correspond to a set of
prespecifed covariate values.  
As an example we will generate the curves for 


The effect of sex on the \emph{lifetime} probability of PCM is not zero,
however.  Because of a longer lifetime, an average female with MGUS will 
spend more total years at risk for PCM than the average male, and so has
a larger lifetime risk of PCM.  
The average rate of progression is about 1\% per year, as shown below,
while the average post diagnosis lifetime is 18 months longer for 
females. 
<<mpyears>>=
pfit1 <- pyears(Surv(ptime, pstat) ~ sex, mtemp, scale=12)
round(100* pfit1$event/pfit1$pyears, 1)  # PCM rate per year

temp <- summary(mfit1, rmean="common")  #print the mean survival time
round(temp$table[,1:6], 1)
@ 

Prevalence estimates for the multi-state model are based on the
Aalen-Johansen estimate and have the same matrix form as shown in 
equation \eqref{AJ}.
However in this case the individual elements $t_{ij}$ within the
transition matrices $T$ are predicted hazards from the relevant Cox
model.

<<mprev>>=
tdata <- expand.grid(mspike=c(.5, 1.5), age=c(6,8), sex=c("F", "M"))
tmat <- matrix(list(), 3, 3,
               dimnames=list(c("Entry", "PCM", "Death"), 
               c("Entry", "PCM", "Death")))
tmat[1,2] <- list(survfit(cfit1, newdata=tdata))  # time to progression curves
tmat[1,3] <- list(survfit(cfit2, newdata=tdata))  # time to death curves
csurv <- survfit(tmat)



For the 2 state competing risks model $T$ has the form
\begin{equation}
  T(s) = \left( \begin{array}{ccc} 
    & \lambda_{12}(s) & \lambda_{13}(s) \\ 0&0&1 \\ 0 &0 &1 \end{array}
  \right) \label{crmat}
\end{equation}
The model \code{cfit1} is the source for $\lambda_{12}$ = the rate of
transition from the entry state to PCM, 
and $\lambda_{13}$ is the rate from entry to death. 
The zeros in the second and third row correspond to the fact that,
for this diagram, the PCM and death states are absorbing.
The diagon elements of $T$ are filled in last and are chosen to make each row
sum to 1.  

These predicted hazards are formed for a chosen set of covariates $x$,
e.g. in the model above we could for instance choose predicted 
transitions for a 72 year old male with an mspike value of 1.1.
Predicted curves from a Cox model are \emph{always} with respect to
a particular hypothetical subject.
The notion of a baseline hazard, i.e. the hazard for a subject 
with all covariates
equal to zero, is sometimes of mathematical convenience but only rarely
corresponds to any patient of interest.

For illustration we will compute the probabilities of PCM from the
model for males and females under 4 cases: age of 60 vs 80 and a serum mspike
of 0.5 vs 1.5; these last are the approximately the quartiles of age and mspike.
Each of surv1 and surv2 below will contain 8 curves, for the 8 combinations
of sex, age and mspike.
<<mprev>>=
tdata <- expand.grid(mspike=c(.5, 1.5), age=c(6,8), sex=c("F", "M"))
surv1 <- survfit(cfit1, newdata=tdata)  # time to progression curves
surv2 <- survfit(cfit2, newdata=tdata)  # time to death curves
@ 
The individual survival curves are not actually of interest, since 
each is a Cox model analog of the `pcmbad' curve we criticized earlier.
Instead, the cumulative hazard portion of the results are used to
build an Aalen-Johansen estimate.
A computational nuisance is that the \code{surv1} and \code{surv2} 
curves do not necessarily jump at the same time.
We use the summary function to select values on a common time scale.
(The \code{summary.survfit} function was original written to provide printed
values at specified times, but turns out to be an easy way to pluck off 
values.)
<<mprev2>>=
cifun <- function(surv1, surv2) {
    utime <- sort(unique(surv1$time, surv2$time))
    jump1 <- diff(c(0, summary(surv1, times=utime, extend=TRUE)$cumhaz))
    jump2 <- diff(c(0, summary(surv2, times=utime, extend=TRUE)$cumhaz))
    T  <- diag(3)
    prev  <- matrix(0., nrow= 1+length(utime), ncol=3)
    prev[1,1] <- 1  #initial prevalence at time 0: all are in the left box
    for (i in 1:length(utime)) {
        T[1,2] <- jump1[i]  #fill in the first row of T(s)
        T[1,3] <- jump2[i]
        T[1,1] <- 1- (jump1[i] + jump2[i])
        prev[i+1,] <- prev[i,] %*% T
    }
    list(time=c(0, utime), P = prev)
}
# Get curves for the 8 cases, and save them in a matrix.
#  Since they all come from the same pair of Cox models, the time values
#  for all curves will be the same
# The cifun function above is only designed to handle one of the 8 covariate
#  patterns at a time, but survival curves can be subscripted.
temp <- cifun(surv1[1], surv2[1])
coxtime <- temp$time
coxdeath <- coxpcm  <- matrix(0., nrow=length(temp$time), ncol=8)
coxdeath[,1] <- temp$P[,3]
coxpcm[,1]   <- temp$P[,2]  
for (i in 2:8){
    temp <- cifun(surv1[i], surv2[i]) 
    coxdeath[,i] <- temp$P[,3]
    coxpcm[,i]   <- temp$P[,2]
}

# Print out a M/F results at 20 years
indx <- match(20*12, coxtime)
progmat <- matrix(coxpcm[indx,], nrow=4)
dimnames(progmat) <- list(c("a=50/ms=0.5", "a=50/ms=1.5", 
                            "a=80/ms=0.5", "a=80/ms=1.5"),
                          c("female", "male"))
round(100*t(progmat), 1)  #males and females at 20 years
@ 
The above table shows that females are modeled to 
have a higher risk of 20 year progression, even
though their hazard at any given moment is nearly identical to males.
The difference at 20 years is on the order of our ``back of the napkin''
person-years estimate of 1\% progression per year * 1.5 more years of life
for the females, but the progression fraction varies substantially by group.  
Eighty year olds have a lower cumulative rate of PCM than 50 year
olds due to a higher death rate, even though the hazard function for
PCM rises with age.

A plot of the calculated progression curves is shown below.
The left hand panel has predicted curves for those with a serum mspike
of 0.5 and the right for mspike=1.5, and in all cases females are
predicted to have a higher level of observed progression than males.
Although the Cox model hazards are assumed to be proportional, the 
prevalence curves are not, however.  
For those diagnosed at an older age the prevalence curves flatten out
after 10 years, simply because so few living subjects remain who are
available to have a PCM event.

<<mprev3, fig=TRUE>>=
par(mfrow=c(1,2))
matplot(coxtime/12, coxpcm[,c(1,3,5,7)], col=c(1,1,2,2),
        lty=c(1,2,1,2), type='l', lwd=2, ylim=range(coxpcm),
        xlab="Years", ylab="Progression to PCM")
legend(1, .23, c("Female: 60", "Male: 60", "Female: 80", "Male: 80"),
       lty=c(1,1,2,2), col=c(1,2,1,2), lwd=2, bty='n')
matplot(coxtime/12, coxpcm[,c(2,4,6,8)], col=c(1,1,2,2),
        lty=c(1,2,1,2), type='l', lwd=2,
        xlab="Years", ylab="Progression to PCM")
@ 


In the competing risks case the prevalence function 
has an alternate form known as the \emph{cumulative incidence} function
\begin{equation}
  CI_k(t) = \int_0^t \lambda_k(u) S(u-) du \label{cuminc}
\end{equation}
where $\lambda_k$ is the incidence function for outcome $k$ and $S$ is the
overall survival curve for ``time to any endpoint''.  
Proving that $P_{1k}$ as computed by Aalen-Johansen estimate is equivalent 
to $CI(t)$ is straightforward.
(The label ``cumulative incidence''  is one of the more unfortunate ones in 
the survival lexicon,
since we normally use `incidence' and `hazard' as interchangeable synonyms but 
the CI is \emph{not} a cumulative hazard.)
For the general multi state case it is simplest to 
use the \code{mstate} package; it was designed for this task and will also
compute appropriate confidence intervals. The latter are complex since they
must account for the uncertainty in the underlying Cox models.

\subsection{Fine-Gray model}
\ifdefined\CMPRSK
For the competing risk case the Fine-Gray model provides an alternate way of
looking at the data. 
As we saw above, the impact of a particular covariate on the final prevalence
values $P$ can be complex, even if the models for the hazards are relatively
simple. 
Start with the functions $F_k(t) = P_{1k}(t)$, which can
be thought of as the distribution function for the improper random variable
$T^*= I(\mbox{endpoint}=k)T + I(\mbox{endpoint}\ne k)\infty$.
Fine and Gray refer to $F_k$ as a subdistribution function.
In an analog to the survival probability in the two state model define
\begin{equation}
  \gamma_k(t) = - d \log[1-F_k(t)]/dt \label{FG}I 
\end{equation}
and assume that $\gamma_k(t;x) = \gamma_{k0}(t) \exp(X\beta)$.
In a 2 state model $\gamma$ is the usual hazard function.
In the same way that our multivariate Cox model \code{cfit2} made the
simplifying assumption that the impact of male sex is to increase the
hazard for death
by a factor of \Sexpr{round(exp(coef(cfit2)['sexM']), 2)}
independent of the subject's age or serum mspike value,
the Fine-Gray model assumes that each covariate's effect on $\log(1-F)$ 
is a constant,
independent of other variables.  
Both model's assumptions are wonderfully simplifying with respect to 
understanding
a covariate --- assuming of course that either assumption is correct.
(In a multi-state model at least one of the two must be false.)

Let us look at the effect of sex on PCM using the Fine-Gray model, which
can be computed using the \code{cmprsk} package.
It does not use model formulas so variables need to be vectors or matrices.
<<finegray>>=
if (cmplib) {
    temp <- mtemp
    temp$fstat <- as.numeric(event)  # 1=censor, 2=pcm, 3=death
    temp$msex  <- with(temp, 1* (sex=='M'))
    fgfit1 <- with(temp, crr(etime, fstat, cov1= cbind(age, msex,  mspike),
                        failcode=2, cencode=1, variance=TRUE))
    fgfit2 <- with(temp, crr(etime, fstat, cov1=cbind(age, msex, mspike),
                         failcode=3, cencode=1, variance=TRUE))
    cmat <- rbind("FineGray: PCM" = fgfit1$coef,
                  "Cox: PCM" = coef(cfit1),
                  "FineGray: death" = fgfit2$coef,
                  "Cox: death" = coef(cfit2))
    round(cmat,2)
}
@ 
The program has determined that female sex increases the PCM outcome by
exp(.21) = 1.24 
fold, for all values of age and mspike.
The Cox model shows no effect of sex on the instantaneous hazard, but
as shown in the last section Cox models do predict higher female prevalence.
We had also seen that older subjects are less likely to experience PCM
due to the competing risk of death;
this is reflected in the FG model as a negative coefficient for age.

The primary strength of the Fine-Gray model with respect to the Cox model
approach is that if ``lifetime risk'' is a primary question then 
the model has given
us a simple and digestible answer to that question:
females have a 1.2 fold higher risk. 
A primary problem of the
model is that we can't go backwards: there is not a simple analog to the
Aalen-Johansen estimator to carry one from $F$ back to $\Lambda$.
If one fits a set of Cox models to the arrows (hazards)
then the boxes (prevalence) of figure \ref{mfig1} can be examined post fit.
With the Fine-Gray approach we have information only on the boxes.

To compare the two fits we can look at what the female/male ratios
for each of our four chosen age/mspike combinations,
when $P$ is computed from the Cox models.
<<compare>>=
cox.f <- log(1- progmat)    #log(1-P)
round(cox.f[,1] / cox.f[,2], 2)
@ 
The Cox models, which assume proportional hazards, show a larger subdistribution
hazard for those who are older, those with higher mspike values, and at longer
follow-up times.  The overall average, however, is similar to the single
value that results from a Fine-Gray model.
The predicted curves are however much different from those shown before
for a Cox model; the Fine-Gray curves
are displayed below with predictions for mspike=0.5 on the left and 1.5 on
the right.  

<<finegray2, fig=TRUE>>=
if (cmplib) {
par(mfrow=c(1,2))
fdata <- model.matrix(~age + sex + mspike, data=tdata)[,-1] #remove intercept
fpred <- predict(fgfit1, cov1=fdata)
matplot(fpred[,1]/12, fpred[,c(2,4,6,8)], col=c(1,1,2,2), lty=c(1,2,1,2),
        ylim=range(fpred[,-1]),
       type='l', lwd=2, xlab="Years", ylab="FG predicted")
legend(0, .22, c("Female, 60", "Male, 60","Female: 80", "Male, 80"),
       col=c(1,2,1,2), lty=c(1,1,2,2), lwd=2, bty='n')
matplot(fpred[,1]/12, fpred[,c(3,5,7,9)], col=c(1,1,2,2), lty=c(1,2,1,2),
       type='l', lwd=2, xlab="Years", ylab="FG predicted")
}
@ 

This tells a very different story than the Cox model prevalence curves.
Which is correct?  Individual non-parametric prevalence curves are
not as helpful as one would hope: there are simply too few progression
events when separated into 8 groups.  

<<timedep>>=
if (cmplib)
fgfit3 <- with(temp, crr(etime, fstat, cov1= cbind(age, msex,  mspike),
                        failcode=2, cencode=1, variance=TRUE,
                        cov2=msex, tf = function(x) log(x)))
@ 

A deeper analysis is called for, but will have to be left for another day.
\else
This section requires the cmprsk library, so was not created.
\fi


\section{Conclusions}
When working with acute disease such as advanced cancer or end-stage liver
disease there is often a single dominating endpoint.
Ordinary single event Kaplan-Meier curves and Cox models are then
efficient and sufficient tools for much of the analysis.  
Such data was the primary use case for survival analysis earlier in the
author's career.  
Data with multiple important endpoints is now common, and multi-state
methods are an important addition to the statistical toolbox.  
As shown above, they are now readily available and easy to use.

It is sometimes assumed that the presence of competing risks 
\emph{requires} the use of a Fine-Gray model (I have seen it in referee
reports), but this is not correct.  
The model may often be useful, but is one available option among many.
Grasping the big picture for a multi-state data set is always a challenge
and we should make use of as many tools as possible.
We are often minded of the story of a centenarian on his 100th birthday
proclaiming that he was looking forward to many more years because
``I read the obituaries every day, and you almost never see someone 
over 100 there''.  It is not always easy to reason correctly from cumulative
deaths back to hazard rates.

An advantage of the  Cox model is that it has better diagnostic tools
available, e.g., evaluation of the proportional hazards assumption via
\code{cox.zph} or the martingale residuals, which can help to further
refine our understanding.
It is also easier to link hazard rates to a biologic rationale
(perhaps incorrectly) which can help in explaining a data set.

\end{document}
